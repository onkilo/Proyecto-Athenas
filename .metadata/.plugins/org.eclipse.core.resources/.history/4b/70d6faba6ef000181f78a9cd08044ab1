package negocio;

import java.sql.*;
import java.util.ArrayList;

import conexion.Conexion;
import entidades.Producto;

public class NegocioProducto {
	private Connection con;
	private CallableStatement cstm;
	private PreparedStatement pst;
	private Statement st;
	private String sql = "";
	private ResultSet rs;
	
	public ArrayList<Producto> listar(){
		ArrayList<Producto> lista = new ArrayList<>();
		
		sql = "SELECT p.ID as ID, p.Descripcion as Descripcion, p.Precio_Compra as Precio_Compra,"
				+ " p.Precio_Venta as Precio_Venta, p.Stock_Actual as Stock_Actual, p.Stock_Min as Stock_Min, "
				+ "c.ID as catID, c.Descripcion as categoria ,p.Imagen as Imagen FROM Producto p INNER JOIN Cat_Prod c ON p.Cat_Id = c.ID";
		
		try {
			con = Conexion.Conectar();
			st = con.createStatement();
			rs = st.executeQuery(sql);
			while(rs.next()){
				Producto obj = new Producto();
				obj.setID(rs.getString("ID"));
				obj.setDescripcion(rs.getString("Descripcion"));
				obj.setPreCompra(rs.getDouble("Precio_Compra"));
				obj.setPreVenta(rs.getDouble("Precio_Venta"));
				obj.setStockAcual(rs.getInt("Stock_Actual"));
				obj.setStockMin(rs.getInt("Stock_Min"));
				obj.getCate().setID(rs.getString("catID"));
				obj.getCate().setDescripcion(rs.getString("categoria"));
				obj.setOs(rs.getBinaryStream("Imagen"));
				
				lista.add(obj);
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally{
			try {
				if(rs != null) rs.close();
				if(st != null) st.close();
				if(con != null) con.close();
			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}
		
		return lista;
	}
	
	public boolean InsertarProducto(Producto obj){
		boolean exito = false;
		
		sql = "{call USP_ProductoMantenimiento(?,?,?,?,?,?,?,?,?)}";
		
		try {
			con = Conexion.Conectar();
			cstm = con.prepareCall(sql);
			cstm.setString(1, "1");
			cstm.setString(2, obj.getID());
			cstm.setString(3, obj.getDescripcion());
			cstm.setDouble(4, obj.getPreCompra());
			cstm.setDouble(5, obj.getPreVenta());
			cstm.setInt(6, obj.getStockAcual());
			cstm.setInt(7, obj.getStockMin());
			cstm.setString(8, obj.getCate().getID());
			if(obj.getOs() != null){
				cstm.setBinaryStream(9, obj.getOs());
			}else{
				cstm.setNull(10, Types.VARBINARY);
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally{
			try {
				if(cstm != null) cstm.close();
				if(con != null) con.close();
			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}
		return exito;
	}
	
}
