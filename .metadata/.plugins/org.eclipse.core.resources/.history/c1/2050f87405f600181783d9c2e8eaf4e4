package util;

import java.util.ArrayList;

import javax.swing.table.AbstractTableModel;

import entidades.Cliente;
import entidades.Producto;

public class ProductoTableModel extends AbstractTableModel {

	private ArrayList<Producto> data;
	
	private String [] columnas = {"Código", "Descripción", "Precio de compra", "Precio de venta", "Stok Actual", "Stock Mínimo", "Categoría"};
	Comunes comon = new Comunes();
	
	public ProductoTableModel() {
		data = new ArrayList<Producto>();
	}
	
	public ProductoTableModel(ArrayList<Producto> data) {
		this.data = data;
		fireTableDataChanged();
	}
	
	@Override
	public int getColumnCount() {
		return columnas.length;
	}

	@Override
	public int getRowCount() {
		return data.size();
	}
	
	@Override
	public String getColumnName(int column) {
		return columnas[column];
	}

	@Override
	public Object getValueAt(int rowIndex, int columnIndex) {
		Producto obj = data.get(rowIndex);
		switch(columnIndex){
		case 0: return obj.getID();
		case 1: return obj.getDescripcion();
		case 2: return comon.formatDouble(obj.getPreCompra());
		case 3: return comon.formatDouble(obj.getPreVenta());
		case 4: return obj.getStockAcual();
		case 5: return obj.getStockMin();
		case 6: return obj.getCate().getDescripcion();
		default : return null;
		}
	}
	
	@Override
	public boolean isCellEditable(int rowIndex, int columnIndex) {
		return false;
	}
	
	@Override
	public Class<?> getColumnClass(int columnIndex) {
		switch(columnIndex){
		case 2:
		case 3: return double.class;
		case 4:
		case 5: return int.class;
		default : return String.class;
		}
	}
	
	public Producto getProducto(int row){
		return this.data.get(row);
	}
	
	public void addProducto(Producto obj){
		data.add(obj);
		fireTableRowsInserted(getRowCount(), getColumnCount());
	}
	
	public void deleteProducto(int row){
		data.remove(row);
		fireTableRowsDeleted(row, row);
	}
	
	//para modificar un producto del modelo
	public void updateProducto(int row, Producto obj){
		data.set(row, obj);
		fireTableRowsUpdated(row, row);
	}
	
	public void clearData(){
		data.clear();
		fireTableDataChanged();
	}
	
	public ArrayList<Producto> getData(){
		return  this.data;
	}
	
	public void setData(ArrayList<Producto> data){
		this.data = data;
		fireTableDataChanged();
	}
	
	public void updateImg(String cod){
		
		for(int i = 0; i<getRowCount(); i++){
			
		}
		
	}
}
